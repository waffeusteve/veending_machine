/*   this.route.queryParams
        .subscribe(params => {
          this.enum = params.enum;
          if(this.enum==="CREATION"){
            this.placeholderCodeBancaire ="";
            this.userDetail = this.formBuiler.group({
              codeGestionnaire: [],
              codeBancaire: [],
              libelle: [],
              codeUtilisateur: [],
              devise: [],
              decisionnaire: [],
              montantMaxForcage: [],
              plafondDecouvert: [],
              cumulJour: [],
              plafondSbf: [],
            });
          }
          if(this.enum==="CONSULTER"){
            this.disabled = true;
            console.log(this.accountManagerService.gestionnaireDetails);
            this.gestionnaireDetails = this.accountManagerService.gestionnaireDetails;
            this.placeholderCodeBancaire= this.gestionnaireDetails.uniteBancaireDTO.code;
            this.placeholderCodeUtilisateur= this.gestionnaireDetails.codeUtilisateur;
            this.placeholderDevise= this.gestionnaireDetails.uniteBancaireDTO.code;
            this.accountManagerService.gestionnaireAutorise = this.gestionnaireDetails.gestionnairesAutorises;
            this.userDetail.disable();

            this.userDetail.patchValue(
              {
                codeGestionnaire: this.gestionnaireDetails.code,
                codeBancaire: this.gestionnaireDetails.uniteBancaireDTO.code,
                libelle: this.gestionnaireDetails.nom,
                codeUtilisateur: this.gestionnaireDetails.codeUtilisateur,
                decisonnaire: this.gestionnaireDetails.decisionnaireON,
                montantMaxForcage:  this.gestionnaireDetails.montantMaxForcage,
                plafondDecouvert: this.gestionnaireDetails.plafondDecouvAutorise,
                cumulJour: this.gestionnaireDetails.montantMaxForcageJour,
                plafondSbf: this.gestionnaireDetails.montantForcagPlafSBF

              }
            )
          }
          if(this.enum==="MODIFIER"){

            //this.accountManagerService.gestionnaireAutoriseTotal = this.gestionnaireDtoList;
            this.gestionnaireDetails = this.accountManagerService.gestionnaireDetails;
            this.placeholderCodeBancaire= this.gestionnaireDetails.uniteBancaireDTO.code;
            this.placeholderCodeUtilisateur= this.gestionnaireDetails.codeUtilisateur;
            this.placeholderDevise= this.gestionnaireDetails.uniteBancaireDTO.code;
            this.accountManagerService.gestionnaireAutorise = this.gestionnaireDetails.gestionnairesAutorises;
            this.userDetail.patchValue(
              {
                codeGestionnaire: this.gestionnaireDetails.code,
                codeBancaire: this.gestionnaireDetails.uniteBancaireDTO.code,
                libelle: this.gestionnaireDetails.nom,
                codeUtilisateur: this.gestionnaireDetails.codeUtilisateur,
                decisonnaire: this.gestionnaireDetails.decisionnaireON,
                montantMaxForcage:  this.gestionnaireDetails.montantMaxForcage,
                plafondDecouvert: this.gestionnaireDetails.plafondDecouvAutorise,
                cumulJour: this.gestionnaireDetails.montantMaxForcageJour,
                plafondSbf: this.gestionnaireDetails.montantForcagPlafSBF

              }
            )
          }

        }
      ); */


valider(value) {
    /* if(this.enum==="MODIFIER"){
      this.gestionnaireCreate.deviseDTO.id = environment.idUniteBancaire;
    this.gestionnaireDetails.pouvoirTypeCompte = this.pouvoirTypeCompteListe;
    this.gestionnaireDetails.pouvoirTypeOperation = this.pouvoirTypeOperationListe;
    this.gestionnaireDetails.code = this.parseSelectValue(value.codeBancaire);
    this.gestionnaireDetails.codeUtilisateur = this.parseSelectValue(value.codeUtilisateur);
    this.gestionnaireDetails.decisionnaireON = value.decisionnaire;
    this.gestionnaireDetails.nom = value.libelle;
    this.gestionnaireDetails.montantMaxForcage = value.montantMaxForcage;
    this.gestionnaireDetails.plafondDecouvAutorise = value.plafondDecouvert;
    this.gestionnaireDetails.montantForcagPlafSBF = value.plafondSbf;
    this.gestionnaireDetails.montantMaxForcageJour = value.cumulJour;
    this.gestionnaireDetails.pouvoirTypeCompte = this.pouvoirTypeCompteListe;
    this.gestionnaireDetails.pouvoirTypeOperation = this.pouvoirTypeOperationListe;
    console.log(this.gestionnaireDetails);

    }

    if(this.enum==="CREATION"){
      this.gestionnaireCreate.deviseDTO.id = environment.idUniteBancaire;
    this.gestionnaireCreate.pouvoirTypeCompte = this.pouvoirTypeCompteListe;
    this.gestionnaireCreate.pouvoirTypeOperation = this.pouvoirTypeOperationListe;
    this.gestionnaireCreate.code = this.parseSelectValue(value.codeBancaire);
    this.gestionnaireCreate.codeUtilisateur = this.parseSelectValue(value.codeUtilisateur);
    this.gestionnaireCreate.decisionnaireON = value.decisionnaire;
    this.gestionnaireCreate.nom = value.libelle;
    this.gestionnaireCreate.montantMaxForcage = value.montantMaxForcage;
    this.gestionnaireCreate.plafondDecouvAutorise = value.plafondDecouvert;
    this.gestionnaireCreate.montantForcagPlafSBF = value.plafondSbf;
    this.gestionnaireCreate.montantMaxForcageJour = value.cumulJour;
    this.gestionnaireCreate.pouvoirTypeCompte = this.pouvoirTypeCompteListe;
    this.gestionnaireCreate.pouvoirTypeOperation = this.pouvoirTypeOperationListe;

    } */


    //console.log(this.gestionnaireCreate);


    /* this.accountManagerService.createAccountManager(this.gestionnaireCreate).subscribe(
      (response)=> {
        this.response = response.returnValue;
        console.log(this.response);
      }
    ); */


  }
